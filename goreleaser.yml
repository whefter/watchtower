# Build customization
build:
  # Path to main.go file.
  # Default is `main.go`
  main: ./main.go

  # GOOS list to build in.
  # For more info refer to https://golang.org/doc/install/source#environment
  # Defaults are darwin and linux
  goos:
    - linux
    - windows

  # GOARCH to build in.
  # For more info refer to https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64
  goarch:
    - amd64
    - arm
    - arm64

# Archive customization
archive:
  # You can change the name of the archive.
  # This is parsed with Golang template engine and the following variables.
  name_template: "{{.ProjectName}}_{{.Os}}_{{.Arch}}"

  # Archive format. Valid options are `tar.gz` and `zip`.
  # Default is `zip`
  format: tar.gz

  # Replacements for GOOS and GOARCH on the archive name.
  # The keys should be valid GOOS or GOARCH values followed by your custom
  # replacements.
  # By default, `replacements` replace GOOS and GOARCH values with valid outputs
  # of `uname -s` and `uname -m` respectively.
  replacements:
    arm: armhf
    arm64: arm64v8
    amd64: amd64
    386: 386
    darwin: macOS
    linux: linux

  format_overrides:
    - goos: windows
      format: zip

  # Additional files you want to add to the archive.
  # Defaults are any files matching `LICENCE*`, `LICENSE*`,
  # `README*` and `CHANGELOG*` (case-insensitive)
  files:
    - LICENSE.md

dockers:
  -
    goos: linux
    goarch: amd64
    goarm: ''
    binary: watchtower
    image: whefter/watchtower
    dockerfile: dockerfile/amd64/Dockerfile
    tag_templates:
      - '{{ .Version }}'
  -
    goos: linux
    goarch: arm
    goarm: 6
    binary: watchtower
    image: whefter/watchtower
    dockerfile: dockerfile/armhf/Dockerfile
    tag_templates:
      - 'armhf-{{ .Version }}'
  -
    goos: linux
    goarch: arm64
    goarm: ''
    binary: watchtower
    image: whefter/watchtower
    dockerfile: dockerfile/arm64v8/Dockerfile
    tag_templates:
      - 'arm64v8-{{ .Version }}'
